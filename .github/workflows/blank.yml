# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  prereq:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: test

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

  notify-slack:
    if: ${{ always() && !cancelled() && needs.prereq.result == 'failure' }}
    runs-on: ubuntu-latest
    needs: [ prereq ]
    steps:
      - name: Check if deployment was manually rejected
        id: check-for-rejection
        run: |
          (
            gh workflow view ${{ github.run_id }} \
            | grep "The deployment was rejected or didn't satisfy other protection rules." \
            && echo "manually-rejected=true" >> "$GITHUB_OUTPUT"
          ) || echo "manually-rejected=false" >> "$GITHUB_OUTPUT"
      - name: Report on manual rejection
        if: ${{ always() && steps.check-for-rejection.outputs.manually-rejected == 'true' }}
        run: |
          echo 'workflow manually rejected by developer'
      - name: Send message to Slack (push)
        if: ${{ github.event_name == 'push' && steps.check-for-rejection.outputs.manually-rejected == 'false' }}
        run: |
          echo "notifying slack"
